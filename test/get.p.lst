# test2/get.p, 1: program gettest() is
# test2/get.p, 2: var i : integer;
    0: calli 0, 2
    1: halt
# test2/get.p, 3: 	r : real;
# test2/get.p, 4: 	ai : array [0..4] of integer;
# test2/get.p, 5: 	ab : array [0..1] of boolean;
# test2/get.p, 6: 	ar : array [1..5] of real;
# test2/get.p, 7: 	s : array [0..9] of character;
# test2/get.p, 8: begin
    2: enter 24
# test2/get.p, 9: 	put_line("5 integers: ");
    3: push '5'
    4: push ' '
    5: push 'i'
    6: push 'n'
    7: push 't'
    8: push 'e'
    9: push 'g'
   10: push 'e'
   11: push 'r'
   12: push 's'
   13: push ':'
   14: push ' '
   15: push 12
   16: push 0
   17: push 0
   18: push 1
   19: put_line
# test2/get.p, 10: 	get(ai);
   20: pushvar 0, 6
   21: push 5
   22: get 2
# test2/get.p, 11: 	put_line(ai);
   23: pushvar 0, 6
   24: eval 5
   25: push 5
   26: push 0
   27: push 0
   28: push 1
   29: put_line
# test2/get.p, 12: 
# test2/get.p, 13: 	put_line("5 reals: ");
   30: push '5'
   31: push ' '
   32: push 'r'
   33: push 'e'
   34: push 'a'
   35: push 'l'
   36: push 's'
   37: push ':'
   38: push ' '
   39: push 9
   40: push 0
   41: push 0
   42: push 1
   43: put_line
# test2/get.p, 14: 	get(ar);
   44: pushvar 0, 13
   45: push 5
   46: get 3
# test2/get.p, 15: 	put_line(ar, 0, 7);
   47: pushvar 0, 13
   48: eval 5
   49: push 5
   50: push 0
   51: push 7
   52: push 1
   53: put_line
# test2/get.p, 16: 
# test2/get.p, 17: 	put_line("2 booleans: ");
   54: push '2'
   55: push ' '
   56: push 'b'
   57: push 'o'
   58: push 'o'
   59: push 'l'
   60: push 'e'
   61: push 'a'
   62: push 'n'
   63: push 's'
   64: push ':'
   65: push ' '
   66: push 12
   67: push 0
   68: push 0
   69: push 1
   70: put_line
# test2/get.p, 18: 	get(ab);
   71: pushvar 0, 11
   72: push 2
   73: get 0
# test2/get.p, 19: 	put_line(ab);
   74: pushvar 0, 11
   75: eval 2
   76: push 2
   77: push 0
   78: push 0
   79: push 1
   80: put_line
# test2/get.p, 20: 
# test2/get.p, 21: 	put_line("10 characters: ");
   81: push '1'
   82: push '0'
   83: push ' '
   84: push 'c'
   85: push 'h'
   86: push 'a'
   87: push 'r'
   88: push 'a'
   89: push 'c'
   90: push 't'
   91: push 'e'
   92: push 'r'
   93: push 's'
   94: push ':'
   95: push ' '
   96: push 15
   97: push 0
   98: push 0
   99: push 1
  100: put_line
# test2/get.p, 22: 	get(s);
  101: pushvar 0, 18
  102: push 10
  103: get 1
# test2/get.p, 23: 	put('"');
  104: push '"'
  105: push 1
  106: push 0
  107: push 0
  108: push 1
  109: put
# test2/get.p, 24: 	put(s);
  110: pushvar 0, 18
  111: eval 10
  112: push 10
  113: push 0
  114: push 0
  115: push 1
  116: put
# test2/get.p, 25: 	put_line('"');
  117: push '"'
  118: push 1
  119: push 0
  120: push 0
  121: push 1
  122: put_line
# test2/get.p, 26: 
# test2/get.p, 27: 	put_line("integer: ");
  123: push 'i'
  124: push 'n'
  125: push 't'
  126: push 'e'
  127: push 'g'
  128: push 'e'
  129: push 'r'
  130: push ':'
  131: push ' '
  132: push 9
  133: push 0
  134: push 0
  135: push 1
  136: put_line
# test2/get.p, 28: 	get(i);
  137: pushvar 0, 4
  138: push 1
  139: get 2
# test2/get.p, 29: 	put_line(i);
  140: pushvar 0, 4
  141: eval 1
  142: push 1
  143: push 0
  144: push 0
  145: push 1
  146: put_line
# test2/get.p, 30: 
# test2/get.p, 31: 	put_line("real: ");
  147: push 'r'
  148: push 'e'
  149: push 'a'
  150: push 'l'
  151: push ':'
  152: push ' '
  153: push 6
  154: push 0
  155: push 0
  156: push 1
  157: put_line
# test2/get.p, 32: 	get(r);
  158: pushvar 0, 5
  159: push 1
  160: get 3
# test2/get.p, 33: 	put_line(r, 0, 7)
  161: pushvar 0, 5
  162: eval 1
  163: push 1
  164: push 0
  165: push 7
# test2/get.p, 34: endprog
  166: push 1
  167: put_line
# test2/get.p, 35: 
  168: ret 0

5 integers: 
[1,2,3,4,5]
5 reals: 
[1.2000000,2.3000000,3.4000000,4.5000000,5.6000000]
2 booleans: 
[false,true]
10 characters: 
"abcdefghij"
integer: 
0
real: 
0.0000000
