# test/fahr.p, 2: { print Fahrenheit-Celsius table	}
# test/fahr.p, 3: {	first version; integers only	}
# test/fahr.p, 4: 
# test/fahr.p, 5: program fahrtest ;
# test/fahr.p, 6: const
    0: call 0, 2
    1: halt
# test/fahr.p, 7: 	LOWER =   0;	{	lower table limit	}
# test/fahr.p, 8: 	UPPER = 300;	{	upper table limit	}
# test/fahr.p, 9: 	STEP  =  20;	{	table step size		}
# test/fahr.p, 10: 
# test/fahr.p, 11: var
# test/fahr.p, 12: 	fahr, celsius : real;
# test/fahr.p, 13: 
# test/fahr.p, 14: begin
    2: enter 2
# test/fahr.p, 15: 	fahr := LOWER;
    3: pushvar 0, 4
    4: push 0
    5: itor
    6: assign
# test/fahr.p, 16: 	while fahr <= UPPER do begin
    7: pushvar 0, 4
    8: eval
    9: push 300
   10: itor
   11: lte
   12: jneq 31
# test/fahr.p, 17: 		celsius := 5.0 * (fahr-32.0) / 9.0;
   13: pushvar 0, 5
   14: push 5.000000
   15: pushvar 0, 4
   16: eval
   17: push 32.000000
   18: sub
   19: mul
   20: push 9.000000
   21: div
   22: assign
# test/fahr.p, 18: 		fahr := fahr + STEP;
   23: pushvar 0, 4
   24: pushvar 0, 4
   25: eval
   26: push 20
   27: itor
   28: add
   29: assign
# test/fahr.p, 19: 	end;
   30: jump 7
# test/fahr.p, 20:  end.
   31: ret

        8:   0.000000
        9: -17.777778
        8:  20.000000
        9: - 6.666667
        8:  40.000000
        9:   4.444444
        8:  60.000000
        9:  15.555556
        8:  80.000000
        9:  26.666667
        8: 100.000000
        9:  37.777778
        8: 120.000000
        9:  48.888889
        8: 140.000000
        9:  60.000000
        8: 160.000000
        9:  71.111111
        8: 180.000000
        9:  82.222222
        8: 200.000000
        9:  93.333333
        8: 220.000000
        9: 104.444444
        8: 240.000000
        9: 115.555556
        8: 260.000000
        9: 126.666667
        8: 280.000000
        9: 137.777778
        8: 300.000000
        9: 148.888889
        8: 320.000000
