# test/builtins.p, 1: { test builtin functions and procedures	}
# test/builtins.p, 2: program builtins ;
# test/builtins.p, 3: const
    0: call 0, 2
    1: halt
# test/builtins.p, 4: 	pi = 3.1415926;
# test/builtins.p, 5: 
# test/builtins.p, 6: type
# test/builtins.p, 7: 	e = (zero, one, two, three);
# test/builtins.p, 8: 
# test/builtins.p, 9: var
# test/builtins.p, 10: 	i : Integer; 
# test/builtins.p, 11: 	r : Real;
# test/builtins.p, 12: 
# test/builtins.p, 13: begin
    2: enter 2
# test/builtins.p, 14: 	i := 1;					{ result: 1			}
    3: pushvar 0, 4
    4: push 1
    5: assign
# test/builtins.p, 15: 	i := Round(2.0);		{ result: 2			}
    6: pushvar 0, 4
    7: push 2.000000
    8: round
    9: assign
# test/builtins.p, 16: 	i := Round(2.5);		{ result: 3 		}
   10: pushvar 0, 4
   11: push 2.500000
   12: round
   13: assign
# test/builtins.p, 17: 	i := Trunc(4.0);		{ result: 4 		}
   14: pushvar 0, 4
   15: push 4.000000
   16: trunc
   17: assign
# test/builtins.p, 18: 	i := Trunc(5.9);		{ result: 5 		}
   18: pushvar 0, 4
   19: push 5.900000
   20: trunc
   21: assign
# test/builtins.p, 19: 	i := MaxInt;			{ result 2**32		}
   22: pushvar 0, 4
   23: push 2147483647
   24: assign
# test/builtins.p, 20: 	
# test/builtins.p, 21: 	i := Abs(1);			{ result: 1			}
   25: pushvar 0, 4
   26: push 1
   27: abs
   28: assign
# test/builtins.p, 22: 	i := Abs(-1);			{ result: 1			}
   29: pushvar 0, 4
   30: push 1
   31: neg
   32: abs
   33: assign
# test/builtins.p, 23: 	r := Abs(1.5);			{ result 1.5		}
   34: pushvar 0, 5
   35: push 1.500000
   36: abs
   37: assign
# test/builtins.p, 24: 	r := Abs(-1.5);			{ result 1.5		}
   38: pushvar 0, 5
   39: push 1.500000
   40: neg
   41: abs
   42: assign
# test/builtins.p, 25: 
# test/builtins.p, 26: 	i := Ord(three);		{ result: 3			}
   43: pushvar 0, 4
   44: push 3
   45: assign
# test/builtins.p, 27: 	i := Ord(i-1);			{ result: 2			}
   46: pushvar 0, 4
   47: pushvar 0, 4
   48: eval
   49: push 1
   50: sub
   51: assign
# test/builtins.p, 28: 
# test/builtins.p, 29: {	i := Ord(1.2)			error: ordinal value expected	}
# test/builtins.p, 30: 
# test/builtins.p, 31: 	r := ArcTan(1);			{ result:  0.785398	}
   52: pushvar 0, 5
   53: push 1
   54: atan
   55: assign
# test/builtins.p, 32: 	r := ArcTan(1.0);		{ result:  0.785398	}
   56: pushvar 0, 5
   57: push 1.000000
   58: atan
   59: assign
# test/builtins.p, 33: 
# test/builtins.p, 34: 	r := Exp(1);			{ result: 2.718282	}
   60: pushvar 0, 5
   61: push 1
   62: exp
   63: assign
# test/builtins.p, 35: 	r := Exp(1.0);			{ result: 2.718282	}
   64: pushvar 0, 5
   65: push 1.000000
   66: exp
   67: assign
# test/builtins.p, 36: 
# test/builtins.p, 37: 	r := Ln(1);				{ result: 0.0		}
   68: pushvar 0, 5
   69: push 1
   70: log
   71: assign
# test/builtins.p, 38: 	r := Ln(1.0);			{ result: 0.0		}
   72: pushvar 0, 5
   73: push 1.000000
   74: log
   75: assign
# test/builtins.p, 39: 
# test/builtins.p, 40: 	i := Odd(10);			{ result: 0			}
   76: pushvar 0, 4
   77: push 10
   78: Odd
   79: assign
# test/builtins.p, 41: 	i := Odd(10+1);			{ result: 1			}
   80: pushvar 0, 4
   81: push 10
   82: push 1
   83: add
   84: Odd
   85: assign
# test/builtins.p, 42: 
# test/builtins.p, 43: 	r := Sin(-3*pi/4);		{ result: -0.707107	}
   86: pushvar 0, 5
   87: push 3
   88: push 3.141593
   89: itor2
   90: mul
   91: push 4
   92: itor
   93: div
   94: neg
   95: Sin
   96: assign
# test/builtins.p, 44: 	r := Sqr(10);			{ result: 100		}
   97: pushvar 0, 5
   98: push 10
   99: Sqr
  100: assign
# test/builtins.p, 45: 	r := Sqrt(2);			{ result: 1.41421	}
  101: pushvar 0, 5
  102: push 2
  103: Sqrt
  104: assign
# test/builtins.p, 46: 
# test/builtins.p, 47: 	Writeln(i, r, pi);
  105: pushvar 0, 4
  106: eval
  107: push 0
  108: push 0
  109: pushvar 0, 5
  110: eval
  111: push 0
  112: push 0
  113: push 3.141593
  114: push 0
  115: push 0
  116: push 3
  117: Writeln
# test/builtins.p, 48: 	Writeln(pi : 7 : 5);
  118: push 3.141593
  119: push 7
  120: push 5
  121: push 1
  122: Writeln
# test/builtins.p, 49: 	Writeln
# test/builtins.p, 50: end .
  123: push 0
  124: Writeln
  125: ret
# test/builtins.p, 51: 

        8:          1
        8:          2
        8:          3
        8:          4
        8:          5
        8: 2147483647
        8:          1
        8:          1
        9:   1.500000
        9:   1.500000
        8:          3
        8:          2
        9:   0.785398
        9:   0.785398
        9:   2.718282
        9:   2.718282
        9:   0.000000
        9:   0.000000
        8:          0
        8:          1
        9:  -0.707107
        9:        100
        9:   1.414214
1 1.414214e+00 3.141593e+00
3.14159

