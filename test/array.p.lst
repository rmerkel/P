# test/array.p, 1: program CharTest() is
# test/array.p, 2: type A is array [0..9] of character;
    0: calli 0, 2
    1: halt
# test/array.p, 3: 
# test/array.p, 4: var i : integer;
# test/array.p, 5: 	c : character;
# test/array.p, 6:  	a1 : A;
# test/array.p, 7:  	a2 : A;
# test/array.p, 8: 	ai : array [0..9] of integer;
# test/array.p, 9: 	ar : array [0..9] of real;
# test/array.p, 10: 
# test/array.p, 11: begin
    2: enter 42
# test/array.p, 12: 	c := 'x';
    3: pushvar 0, 5
    4: push 'x'
    5: llimit 0
    6: ulimit 127
    7: assign 1
# test/array.p, 13: 	putln(c);	
    8: pushvar 0, 5
    9: eval 1
   10: push 1
   11: push 0
   12: push 0
   13: push 1
   14: putln
# test/array.p, 14: 
# test/array.p, 15: 	a1 := "abcdefghij";		{	fill a1 with "abcd..."			}
   15: pushvar 0, 6
   16: push 'a'
   17: push 'b'
   18: push 'c'
   19: push 'd'
   20: push 'e'
   21: push 'f'
   22: push 'g'
   23: push 'h'
   24: push 'i'
   25: push 'j'
   26: assign 10
# test/array.p, 16:  	putln(a1);
   27: pushvar 0, 6
   28: eval 10
   29: push 10
   30: push 0
   31: push 0
   32: push 1
   33: putln
# test/array.p, 17: 
# test/array.p, 18: 	a2 := a1;				{	copies the contents of a1 to a2	}
   34: pushvar 0, 16
   35: pushvar 0, 6
   36: eval 10
   37: assign 10
# test/array.p, 19: 	putln(a2);
   38: pushvar 0, 16
   39: eval 10
   40: push 10
   41: push 0
   42: push 0
   43: push 1
   44: putln
# test/array.p, 20: 
# test/array.p, 21: 	a1 := "0123456789";		{	fill a1 with "0123..."			}
   45: pushvar 0, 6
   46: push '0'
   47: push '1'
   48: push '2'
   49: push '3'
   50: push '4'
   51: push '5'
   52: push '6'
   53: push '7'
   54: push '8'
   55: push '9'
   56: assign 10
# test/array.p, 22: 							{	while a1 has changed...			}
# test/array.p, 23: 	putln(a1);
   57: pushvar 0, 6
   58: eval 10
   59: push 10
   60: push 0
   61: push 0
   62: push 1
   63: putln
# test/array.p, 24: 							{	... a2 has not!					}
# test/array.p, 25: 	putln(a2);
   64: pushvar 0, 16
   65: eval 10
   66: push 10
   67: push 0
   68: push 0
   69: push 1
   70: putln
# test/array.p, 26: 
# test/array.p, 27: 	for i in 0..9 loop
   71: pushvar 0, 4
   72: dup
   73: push 0
   74: assign 1
   75: dup
   76: eval 1
   77: push 9
   78: lte
   79: jneqi 96
# test/array.p, 28: 		ai[i] := i
   80: pushvar 0, 26
   81: pushvar 0, 4
   82: eval 1
   83: llimit 0
   84: ulimit 9
   85: add
# test/array.p, 29: 	endloop;
   86: pushvar 0, 4
   87: eval 1
   88: assign 1
   89: dup
   90: dup
   91: eval 1
   92: push 1
   93: add
   94: assign 1
   95: jumpi 75
   96: pop 1
# test/array.p, 30: 	putln(ai);
   97: pushvar 0, 26
   98: eval 10
   99: push 10
  100: push 0
  101: push 0
  102: push 1
  103: putln
# test/array.p, 31: 
# test/array.p, 32: 	for i in 0..9 loop
  104: pushvar 0, 4
  105: dup
  106: push 0
  107: assign 1
  108: dup
  109: eval 1
  110: push 9
  111: lte
  112: jneqi 132
# test/array.p, 33: 		ar[i] := i * 1.1;
  113: pushvar 0, 36
  114: pushvar 0, 4
  115: eval 1
  116: llimit 0
  117: ulimit 9
  118: add
  119: pushvar 0, 4
  120: eval 1
  121: push 1.100000
  122: itor2
  123: mul
  124: assign 1
# test/array.p, 34: 	endloop;
  125: dup
  126: dup
  127: eval 1
  128: push 1
  129: add
  130: assign 1
  131: jumpi 108
  132: pop 1
# test/array.p, 35: 	putln(ar);
  133: pushvar 0, 36
  134: eval 10
  135: push 10
  136: push 0
  137: push 0
  138: push 1
  139: putln
# test/array.p, 36: 	putln(ar,4,1)
  140: pushvar 0, 36
  141: eval 10
  142: push 10
  143: push 4
  144: push 1
# test/array.p, 37: endprog
  145: push 1
  146: putln
# test/array.p, 38: 
  147: ret 0

x
abcdefghij
abcdefghij
0123456789
abcdefghij
[0,1,2,3,4,5,6,7,8,9]
[0.000000e+00,1.100000e+00,2.200000e+00,3.300000e+00,4.400000e+00,5.500000e+00,6.600000e+00,7.700000e+00,8.800000e+00,9.900000e+00]
[ 0.0, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9]
