# test/array.p, 1: program CharTest() is
# test/array.p, 2: type A is array [0..9] of character;
    0: calli 0, 2
    1: halt
# test/array.p, 3: 
# test/array.p, 4: var i : integer;
# test/array.p, 5: 	c : character;
# test/array.p, 6:  	a1 : A;
# test/array.p, 7:  	a2 : A;
# test/array.p, 8: 
# test/array.p, 9: begin
    2: enter 22
# test/array.p, 10: 	c := 'x';
    3: pushvar 0, 5
    4: push 'x'
    5: llimit 0
    6: ulimit 127
    7: assign 1
# test/array.p, 11: 	writeln(c);	
    8: pushvar 0, 5
    9: eval 1
   10: push 1
   11: push 0
   12: push 0
   13: writeln
# test/array.p, 12: 
# test/array.p, 13: 	a1 := "abcdefghij";		{	fill a1 with "abcd..."			}
   14: pushvar 0, 6
   15: push 'a'
   16: push 'b'
   17: push 'c'
   18: push 'd'
   19: push 'e'
   20: push 'f'
   21: push 'g'
   22: push 'h'
   23: push 'i'
   24: push 'j'
   25: assign 10
# test/array.p, 14:  	writeln(a1);
   26: pushvar 0, 6
   27: eval 10
   28: push 10
   29: push 0
   30: push 0
   31: writeln
# test/array.p, 15: 
# test/array.p, 16: 	a2 := a1;				{	copies the contents of a1 to a2	}
   32: pushvar 0, 16
   33: pushvar 0, 6
   34: eval 10
   35: assign 10
# test/array.p, 17: 	writeln(a2);
   36: pushvar 0, 16
   37: eval 10
   38: push 10
   39: push 0
   40: push 0
   41: writeln
# test/array.p, 18: 
# test/array.p, 19: 	a1 := "0123456789";		{	fill a1 with "0123..."			}
   42: pushvar 0, 6
   43: push '0'
   44: push '1'
   45: push '2'
   46: push '3'
   47: push '4'
   48: push '5'
   49: push '6'
   50: push '7'
   51: push '8'
   52: push '9'
   53: assign 10
# test/array.p, 20: 							{	while a1 has changed...			}
# test/array.p, 21: 	writeln(a1);
   54: pushvar 0, 6
   55: eval 10
   56: push 10
   57: push 0
   58: push 0
   59: writeln
# test/array.p, 22: 							{	... a2 has not!					}
# test/array.p, 23: 	writeln(a2)
   60: pushvar 0, 16
   61: eval 10
   62: push 10
   63: push 0
   64: push 0
# test/array.p, 24: endprog
   65: writeln
# test/array.p, 25: 
   66: ret

x
abcdefghij
abcdefghij
0123456789
abcdefghij
