# test/fortest.p, 1: program ForTest;
# test/fortest.p, 2: var
    0: call 0, 2
    1: halt
# test/fortest.p, 3: 	i : integer;
# test/fortest.p, 4: 
# test/fortest.p, 5: begin
    2: enter 1
# test/fortest.p, 6: 	for i := 0 to -1 do writeln(i);
    3: pushvar 0, 4
    4: dup
    5: push 0
    6: assign 1
    7: dup
    8: eval 1
    9: push 1
   10: neg
   11: lte
   12: jneq 27
   13: pushvar 0, 4
   14: eval 1
   15: push 1
   16: push 0
   17: push 0
   18: push 1
   19: writeln
   20: dup
   21: dup
   22: eval 1
   23: push 1
   24: add
   25: assign 1
   26: jump 7
   27: pop
# test/fortest.p, 7: 	for i := 0 to 0 do writeln(i);
   28: pushvar 0, 4
   29: dup
   30: push 0
   31: assign 1
   32: dup
   33: eval 1
   34: push 0
   35: lte
   36: jneq 51
   37: pushvar 0, 4
   38: eval 1
   39: push 1
   40: push 0
   41: push 0
   42: push 1
   43: writeln
   44: dup
   45: dup
   46: eval 1
   47: push 1
   48: add
   49: assign 1
   50: jump 32
   51: pop
# test/fortest.p, 8: 	for i := 1 to 9 do writeln(i)
   52: pushvar 0, 4
   53: dup
   54: push 1
   55: assign 1
   56: dup
   57: eval 1
   58: push 9
   59: lte
   60: jneq 75
   61: pushvar 0, 4
   62: eval 1
   63: push 1
   64: push 0
   65: push 0
# test/fortest.p, 9: end .
   66: push 1
   67: writeln
   68: dup
   69: dup
   70: eval 1
   71: push 1
   72: add
   73: assign 1
   74: jump 56
   75: pop
   76: ret

0
1
2
3
4
5
6
7
8
9
