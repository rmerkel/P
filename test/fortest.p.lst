# test/fortest.p, 1: program ForTest;
# test/fortest.p, 2: var
    0: call 0, 2
    1: halt
# test/fortest.p, 3: 	i : Integer;
# test/fortest.p, 4: 
# test/fortest.p, 5: begin
    2: enter 1
# test/fortest.p, 6: 	for i := 0 to -1 do Writeln(i);
    3: pushvar 0, 4
    4: dup
    5: push 0
    6: assign
    7: dup
    8: eval
    9: push 1
   10: neg
   11: lte
   12: jneq 26
   13: pushvar 0, 4
   14: eval
   15: push 0
   16: push 0
   17: push 1
   18: Writeln
   19: dup
   20: dup
   21: eval
   22: push 1
   23: add
   24: assign
   25: jump 7
   26: pop
# test/fortest.p, 7: 	for i := 0 to 0 do Writeln(i);
   27: pushvar 0, 4
   28: dup
   29: push 0
   30: assign
   31: dup
   32: eval
   33: push 0
   34: lte
   35: jneq 49
   36: pushvar 0, 4
   37: eval
   38: push 0
   39: push 0
   40: push 1
   41: Writeln
   42: dup
   43: dup
   44: eval
   45: push 1
   46: add
   47: assign
   48: jump 31
   49: pop
# test/fortest.p, 8: 	for i := 1 to 9 do Writeln(i)
   50: pushvar 0, 4
   51: dup
   52: push 1
   53: assign
   54: dup
   55: eval
   56: push 9
   57: lte
   58: jneq 72
   59: pushvar 0, 4
   60: eval
   61: push 0
   62: push 0
# test/fortest.p, 9: end .
   63: push 1
   64: Writeln
   65: dup
   66: dup
   67: eval
   68: push 1
   69: add
   70: assign
   71: jump 54
   72: pop
   73: ret

        8:          0
        8:          0
0
        8:          1
        8:          1
1
        8:          2
2
        8:          3
3
        8:          4
4
        8:          5
5
        8:          6
6
        8:          7
7
        8:          8
8
        8:          9
9
        8:         10
