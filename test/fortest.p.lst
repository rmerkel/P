# test/fortest.p, 1: program ForTest;
# test/fortest.p, 2: var
    0: push 0
    1: push 4
    2: call
    3: halt
# test/fortest.p, 3: 	i : integer;
# test/fortest.p, 4: 
# test/fortest.p, 5: begin
    4: enter 1
# test/fortest.p, 6: 	for i := 0 to -1 do writeln(i);
    5: pushvar 0, 4
    6: dup
    7: push 0
    8: assign 1
    9: dup
   10: eval 1
   11: push 1
   12: neg
   13: lte
   14: push 31
   15: jneq
   16: pushvar 0, 4
   17: eval 1
   18: push 1
   19: push 0
   20: push 0
   21: push 1
   22: writeln
   23: dup
   24: dup
   25: eval 1
   26: push 1
   27: add
   28: assign 1
   29: push 9
   30: jump
   31: pop
# test/fortest.p, 7: 	for i := 0 to 0 do writeln(i);
   32: pushvar 0, 4
   33: dup
   34: push 0
   35: assign 1
   36: dup
   37: eval 1
   38: push 0
   39: lte
   40: push 57
   41: jneq
   42: pushvar 0, 4
   43: eval 1
   44: push 1
   45: push 0
   46: push 0
   47: push 1
   48: writeln
   49: dup
   50: dup
   51: eval 1
   52: push 1
   53: add
   54: assign 1
   55: push 36
   56: jump
   57: pop
# test/fortest.p, 8: 	for i := 1 to 9 do writeln(i)
   58: pushvar 0, 4
   59: dup
   60: push 1
   61: assign 1
   62: dup
   63: eval 1
   64: push 9
   65: lte
   66: push 83
   67: jneq
   68: pushvar 0, 4
   69: eval 1
   70: push 1
   71: push 0
   72: push 0
# test/fortest.p, 9: end .
   73: push 1
   74: writeln
   75: dup
   76: dup
   77: eval 1
   78: push 1
   79: add
   80: assign 1
   81: push 62
   82: jump
   83: pop
   84: ret

0
1
2
3
4
5
6
7
8
9
