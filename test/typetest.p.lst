# test/typetest.p, 1: { Test advanced types	}
# test/typetest.p, 2: program typetest;
# test/typetest.p, 3: type
    0: call 0, 2
    1: halt
# test/typetest.p, 4: 	int = integer;
# test/typetest.p, 5: 	rng = 1..10;
# test/typetest.p, 6: 	enum = (	one, two, three	);
# test/typetest.p, 7: 
# test/typetest.p, 8: var
# test/typetest.p, 9: 	i : int;
# test/typetest.p, 10: 	r : rng;
# test/typetest.p, 11: 	a : array[rng] of integer;
# test/typetest.p, 12: 	a2 : array [enum] of int;
# test/typetest.p, 13: 
# test/typetest.p, 14: begin
    2: enter 16
# test/typetest.p, 15: 	i := 1; i := i + 1;
    3: pushvar 0, 4
    4: push 1
    5: assign
    6: pushvar 0, 4
    7: pushvar 0, 4
    8: eval
    9: push 1
   10: add
   11: assign
# test/typetest.p, 16: 	r := 1; r := r + 1;
   12: pushvar 0, 5
   13: push 1
   14: assign
   15: pushvar 0, 5
   16: pushvar 0, 5
   17: eval
   18: push 1
   19: add
   20: assign
# test/typetest.p, 17: 
# test/typetest.p, 18: 	i := 1;	{	fill a[] with its index	}
   21: pushvar 0, 4
   22: push 1
   23: assign
# test/typetest.p, 19:  	while i < 11 do begin 
   24: pushvar 0, 4
   25: eval
   26: push 11
   27: lt
   28: jneq 45
# test/typetest.p, 20: 		a[i] := i;
   29: pushvar 0, 6
   30: pushvar 0, 4
   31: eval
   32: push 1
   33: sub
   34: add
   35: pushvar 0, 4
   36: eval
   37: assign
# test/typetest.p, 21: 		i := i + 1
   38: pushvar 0, 4
   39: pushvar 0, 4
   40: eval
   41: push 1
# test/typetest.p, 22: 	end;
   42: add
   43: assign
   44: jump 24
# test/typetest.p, 23: 
# test/typetest.p, 24: 	r := 1;	{	multiply by 10			}
   45: pushvar 0, 5
   46: push 1
   47: assign
# test/typetest.p, 25: 	repeat begin
# test/typetest.p, 26: 		a[r] := a[r] * 10;
   48: pushvar 0, 6
   49: pushvar 0, 5
   50: eval
   51: push 1
   52: sub
   53: add
   54: pushvar 0, 6
   55: pushvar 0, 5
   56: eval
   57: push 1
   58: sub
   59: add
   60: eval
   61: push 10
   62: mul
   63: assign
# test/typetest.p, 27: 		r := r + 1
   64: pushvar 0, 5
   65: pushvar 0, 5
   66: eval
   67: push 1
# test/typetest.p, 28: 	end until r = 11;
   68: add
   69: assign
   70: pushvar 0, 5
   71: eval
   72: push 11
   73: equ
   74: jneq 48
# test/typetest.p, 29: 
# test/typetest.p, 30: 	a2[one]	:= 1;
   75: pushvar 0, 7
   76: pushvar 0, 4
   77: eval
   78: add
   79: push 1
   80: assign
# test/typetest.p, 31: 	a2[two]	:= 2;
   81: pushvar 0, 7
   82: pushvar 0, 5
   83: eval
   84: add
   85: push 2
   86: assign
# test/typetest.p, 32: 	a2[three] := 3
   87: pushvar 0, 7
   88: pushvar 0, 6
   89: eval
   90: add
   91: push 3
# test/typetest.p, 33: end .
   92: assign
   93: ret

        8:          1
        8:          2
        9:          1
        9:          2
        8:          1
       10:          1
        8:          2
       11:          2
        8:          3
       12:          3
        8:          4
       13:          4
        8:          5
       14:          5
        8:          6
       15:          6
        8:          7
       16:          7
        8:          8
       17:          8
        8:          9
       18:          9
        8:         10
       19:         10
        8:         11
        9:          1
       10:         10
        9:          2
       11:         20
        9:          3
       12:         30
        9:          4
       13:         40
        9:          5
       14:         50
        9:          6
       15:         60
        9:          7
       16:         70
        9:          8
       17:         80
        9:          9
       18:         90
        9:         10
       19:        100
        9:         11
       22:          1
       22:          2
       21:          3
