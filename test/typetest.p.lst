# test/typetest.p, 2: { Test advanced types	}
# test/typetest.p, 3: program testtype ;
# test/typetest.p, 4: type
    0: call 0, 2
    1: halt
# test/typetest.p, 5: 	int = integer;
# test/typetest.p, 6: 	rng = 0..9;
# test/typetest.p, 7: 
# test/typetest.p, 8: var
# test/typetest.p, 9: 	i	: int;
# test/typetest.p, 10: 	i2  : integer;
# test/typetest.p, 11: 	r	: 0..9;
# test/typetest.p, 12: 	r2	: rng;
# test/typetest.p, 13: 	a	: array [rng] of int;
# test/typetest.p, 14: 
# test/typetest.p, 15: begin
    2: enter 14
# test/typetest.p, 16: 	i := 0;
    3: pushvar 0, 4
    4: push 0
    5: assign
# test/typetest.p, 17: 	i := i + 1;
    6: pushvar 0, 4
    7: pushvar 0, 4
    8: eval
    9: push 1
   10: add
   11: assign
# test/typetest.p, 18: 
# test/typetest.p, 19: 	r := 0;
   12: pushvar 0, 6
   13: push 0
   14: assign
# test/typetest.p, 20: 	r := r + 1;
   15: pushvar 0, 6
   16: pushvar 0, 6
   17: eval
   18: push 1
   19: add
   20: assign
# test/typetest.p, 21: 
# test/typetest.p, 22: 	r2 := 0;
   21: pushvar 0, 7
   22: push 0
   23: assign
# test/typetest.p, 23: 	r2 := r2 + 1;
   24: pushvar 0, 7
   25: pushvar 0, 7
   26: eval
   27: push 1
   28: add
   29: assign
# test/typetest.p, 24: 	r2 := r2 + r;
   30: pushvar 0, 7
   31: pushvar 0, 7
   32: eval
   33: pushvar 0, 6
   34: eval
   35: add
   36: assign
# test/typetest.p, 25: 
# test/typetest.p, 26: 	i := 0;
   37: pushvar 0, 4
   38: push 0
   39: assign
# test/typetest.p, 27:  	while i < 10 do begin 
   40: pushvar 0, 4
   41: eval
   42: push 10
   43: lt
   44: jneq 59
# test/typetest.p, 28: 		a[i] := i;
   45: pushvar 0, 8
   46: pushvar 0, 4
   47: eval
   48: add
   49: pushvar 0, 4
   50: eval
   51: assign
# test/typetest.p, 29: 		i := i + 1
   52: pushvar 0, 4
   53: pushvar 0, 4
   54: eval
   55: push 1
# test/typetest.p, 30: 	end;
   56: add
   57: assign
   58: jump 40
# test/typetest.p, 31: 
# test/typetest.p, 32: 	i := 0;
   59: pushvar 0, 4
   60: push 0
   61: assign
# test/typetest.p, 33:  	while i < 10 do begin 
   62: pushvar 0, 4
   63: eval
   64: push 10
   65: lt
   66: jneq 86
# test/typetest.p, 34: 		a[i] := a[i] * 10;
   67: pushvar 0, 8
   68: pushvar 0, 4
   69: eval
   70: add
   71: pushvar 0, 8
   72: pushvar 0, 4
   73: eval
   74: add
   75: eval
   76: push 10
   77: mul
   78: assign
# test/typetest.p, 35: 		i := i + 1
   79: pushvar 0, 4
   80: pushvar 0, 4
   81: eval
   82: push 1
# test/typetest.p, 36: 	end	
   83: add
   84: assign
# test/typetest.p, 37:  end.
   85: jump 62
   86: ret

        8:          0
        8:          1
       10:          0
       10:          1
       11:          0
       11:          1
       11:          2
        8:          0
       12:          0
        8:          1
       13:          1
        8:          2
       14:          2
        8:          3
       15:          3
        8:          4
       16:          4
        8:          5
       17:          5
        8:          6
       18:          6
        8:          7
       19:          7
        8:          8
       20:          8
        8:          9
       21:          9
        8:         10
        8:          0
       12:          0
        8:          1
       13:         10
        8:          2
       14:         20
        8:          3
       15:         30
        8:          4
       16:         40
        8:          5
       17:         50
        8:          6
       18:         60
        8:          7
       19:         70
        8:          8
       20:         80
        8:          9
       21:         90
        8:         10
