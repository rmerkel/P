# test/typetest.p, 2: { Test advanced types	}
# test/typetest.p, 3: program testtype ;
# test/typetest.p, 4: type
    0: call 0, 2
    1: halt
# test/typetest.p, 5: 	int = integer;
# test/typetest.p, 6: 	rng = 1..127;
# test/typetest.p, 7: 
# test/typetest.p, 8: var
# test/typetest.p, 9: 	i	: integer;
# test/typetest.p, 10: 	i2	: int;
# test/typetest.p, 11: 
# test/typetest.p, 12: 	r	: 0..127;
# test/typetest.p, 13: 	r2	: rng;
# test/typetest.p, 14: 
# test/typetest.p, 15: 	a	: array [rng] of integer;
# test/typetest.p, 16: 
# test/typetest.p, 17: begin
    2: enter 131
# test/typetest.p, 18: 	i := 0;
    3: push 0
    4: pushvar 0, 4
    5: assign
# test/typetest.p, 19: 	i := i + 1;
    6: pushvar 0, 4
    7: eval
    8: push 1
    9: add
   10: pushvar 0, 4
   11: assign
# test/typetest.p, 20: 
# test/typetest.p, 21: 	i2 := 0;
   12: push 0
   13: pushvar 0, 5
   14: assign
# test/typetest.p, 22: 	i2 := i2 + 1;	
   15: pushvar 0, 5
   16: eval
   17: push 1
   18: add
   19: pushvar 0, 5
   20: assign
# test/typetest.p, 23: 	i2 := i2 + i;
   21: pushvar 0, 5
   22: eval
   23: pushvar 0, 4
   24: eval
   25: add
   26: pushvar 0, 5
   27: assign
# test/typetest.p, 24: 
# test/typetest.p, 25: 	r := 0;
   28: push 0
   29: pushvar 0, 6
   30: assign
# test/typetest.p, 26: 	r := r + 1;
   31: pushvar 0, 6
   32: eval
   33: push 1
   34: add
   35: pushvar 0, 6
   36: assign
# test/typetest.p, 27: 
# test/typetest.p, 28: 	r2 := 0;
   37: push 0
   38: pushvar 0, 7
   39: assign
# test/typetest.p, 29: 	r2 := r2 + 1;
   40: pushvar 0, 7
   41: eval
   42: push 1
   43: add
   44: pushvar 0, 7
   45: assign
# test/typetest.p, 30: 	r2 := r2 + r
   46: pushvar 0, 7
   47: eval
# test/typetest.p, 31: 
# test/typetest.p, 32: {	a[0] = 0	}
# test/typetest.p, 33:  end.
   48: pushvar 0, 6
   49: eval
   50: add
   51: pushvar 0, 7
   52: assign
   53: ret

        8:          0
        8:          1
        9:          0
        9:          1
        9:          2
       10:          0
       10:          1
       11:          0
       11:          1
       11:          2
