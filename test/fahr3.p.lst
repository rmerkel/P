# test/fahr3.p, 1: { print Fahrenheit-Celsius table	}
# test/fahr3.p, 2: {	third version; integers & reals	}
# test/fahr3.p, 3: 
# test/fahr3.p, 4: program fahr3 ;
# test/fahr3.p, 5: const
    0: push 0
    1: push 4
    2: call
    3: halt
# test/fahr3.p, 6: 	LOWER =   0.0;	{	lower table limit	}
# test/fahr3.p, 7: 	UPPER = 300.0;	{	upper table limit	}
# test/fahr3.p, 8: 	STEP  =  20.0;	{	table step size		}
# test/fahr3.p, 9: 
# test/fahr3.p, 10: var
# test/fahr3.p, 11: 	fahr : real ; celsius : integer;
# test/fahr3.p, 12: 
# test/fahr3.p, 13: begin
    4: enter 2
# test/fahr3.p, 14: 	fahr := LOWER;
    5: pushvar 0, 4
    6: push 0.000000
    7: assign 1
# test/fahr3.p, 15: 	while fahr <= UPPER do begin
    8: pushvar 0, 4
    9: eval 1
   10: push 300.000000
   11: lte
   12: push 45
   13: jneq
# test/fahr3.p, 16: 		celsius := round(5.0 * (fahr-32.0) / 9.0);
   14: pushvar 0, 5
   15: push 5.000000
   16: pushvar 0, 4
   17: eval 1
   18: push 32.000000
   19: sub
   20: mul
   21: push 9.000000
   22: div
   23: round
   24: assign 1
# test/fahr3.p, 17: 		fahr := fahr + STEP;
   25: pushvar 0, 4
   26: pushvar 0, 4
   27: eval 1
   28: push 20.000000
   29: add
   30: assign 1
# test/fahr3.p, 18: 		writeln(fahr : 6 : 1, celsius : 6 : 1);
   31: pushvar 0, 4
   32: eval 1
   33: push 1
   34: push 6
   35: push 1
   36: pushvar 0, 5
   37: eval 1
   38: push 1
   39: push 6
   40: push 1
   41: push 2
   42: writeln
# test/fahr3.p, 19: 	end
# test/fahr3.p, 20:  end.
   43: push 8
   44: jump
   45: ret

  20.0    -18
  40.0     -7
  60.0      4
  80.0     16
 100.0     27
 120.0     38
 140.0     49
 160.0     60
 180.0     71
 200.0     82
 220.0     93
 240.0    104
 260.0    116
 280.0    127
 300.0    138
 320.0    149
