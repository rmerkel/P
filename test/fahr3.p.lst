# test/fahr3.p, 1: { print Fahrenheit-Celsius table	}
# test/fahr3.p, 2: {	third version; integers & reals	}
# test/fahr3.p, 3: 
# test/fahr3.p, 4: program fahr3 ;
# test/fahr3.p, 5: const
    0: call 0, 2
    1: halt
# test/fahr3.p, 6: 	LOWER =   0.0;	{	lower table limit	}
# test/fahr3.p, 7: 	UPPER = 300.0;	{	upper table limit	}
# test/fahr3.p, 8: 	STEP  =  20.0;	{	table step size		}
# test/fahr3.p, 9: 
# test/fahr3.p, 10: var
# test/fahr3.p, 11: 	fahr : real ; celsius : integer;
# test/fahr3.p, 12: 
# test/fahr3.p, 13: begin
    2: enter 2
# test/fahr3.p, 14: 	fahr := LOWER;
    3: pushvar 0, 4
    4: push 0.000000
    5: assign 1
# test/fahr3.p, 15: 	while fahr <= UPPER do begin
    6: pushvar 0, 4
    7: eval 1
    8: push 300.000000
    9: lte
   10: jneq 41
# test/fahr3.p, 16: 		celsius := round(5.0 * (fahr-32.0) / 9.0);
   11: pushvar 0, 5
   12: push 5.000000
   13: pushvar 0, 4
   14: eval 1
   15: push 32.000000
   16: sub
   17: mul
   18: push 9.000000
   19: div
   20: round
   21: assign 1
# test/fahr3.p, 17: 		fahr := fahr + STEP;
   22: pushvar 0, 4
   23: pushvar 0, 4
   24: eval 1
   25: push 20.000000
   26: add
   27: assign 1
# test/fahr3.p, 18: 		writeln(fahr : 6 : 1, celsius : 6 : 1);
   28: pushvar 0, 4
   29: eval 1
   30: push 1
   31: push 6
   32: push 1
   33: pushvar 0, 5
   34: eval 1
   35: push 1
   36: push 6
   37: push 1
   38: push 2
   39: writeln
# test/fahr3.p, 19: 	end
# test/fahr3.p, 20:  end.
   40: jump 6
   41: ret

  20.0    -18
  40.0     -7
  60.0      4
  80.0     16
 100.0     27
 120.0     38
 140.0     49
 160.0     60
 180.0     71
 200.0     82
 220.0     93
 240.0    104
 260.0    116
 280.0    127
 300.0    138
 320.0    149
