# test/fahr3.p, 1: { print Fahrenheit-Celsius table	}
# test/fahr3.p, 2: {	third version; integers & reals	}
# test/fahr3.p, 3: 
# test/fahr3.p, 4: program fahr3 ;
# test/fahr3.p, 5: const
    0: call 0, 2
    1: halt
# test/fahr3.p, 6: 	LOWER =   0.0;	{	lower table limit	}
# test/fahr3.p, 7: 	UPPER = 300.0;	{	upper table limit	}
# test/fahr3.p, 8: 	STEP  =  20.0;	{	table step size		}
# test/fahr3.p, 9: 
# test/fahr3.p, 10: var
# test/fahr3.p, 11: 	fahr : Real ; celsius : Integer;
# test/fahr3.p, 12: 
# test/fahr3.p, 13: begin
    2: enter 2
# test/fahr3.p, 14: 	fahr := LOWER;
    3: pushvar 0, 4
    4: push 0.000000
    5: assign
# test/fahr3.p, 15: 	while fahr <= UPPER do begin
    6: pushvar 0, 4
    7: eval
    8: push 300.000000
    9: lte
   10: jneq 29
# test/fahr3.p, 16: 		celsius := Round(5.0 * (fahr-32.0) / 9.0);
   11: pushvar 0, 5
   12: push 5.000000
   13: pushvar 0, 4
   14: eval
   15: push 32.000000
   16: sub
   17: mul
   18: push 9.000000
   19: div
   20: rtoi
   21: assign
# test/fahr3.p, 17: 		fahr := fahr + STEP;
   22: pushvar 0, 4
   23: pushvar 0, 4
   24: eval
   25: push 20.000000
   26: add
   27: assign
# test/fahr3.p, 18: 	end;
   28: jump 6
# test/fahr3.p, 19:  end.
   29: ret

        8:   0.000000
        9: -       18
        8:  20.000000
        9: -        7
        8:  40.000000
        9:          4
        8:  60.000000
        9:         16
        8:  80.000000
        9:         27
        8: 100.000000
        9:         38
        8: 120.000000
        9:         49
        8: 140.000000
        9:         60
        8: 160.000000
        9:         71
        8: 180.000000
        9:         82
        8: 200.000000
        9:         93
        8: 220.000000
        9:        104
        8: 240.000000
        9:        116
        8: 260.000000
        9:        127
        8: 280.000000
        9:        138
        8: 300.000000
        9:        149
        8: 320.000000
