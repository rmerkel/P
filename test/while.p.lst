# test/while.p, 1: { Simple while loop test }
# test/while.p, 2: program ForTest() is
# test/while.p, 3: type R is 0..9;
    0: calli 0, 2
    1: halt
# test/while.p, 4: var i : R;
# test/while.p, 5: begin
    2: enter 1
# test/while.p, 6: 	put_line("i := 0, i <= 9, i := i + 1");
    3: push 'i'
    4: push ' '
    5: push ':'
    6: push '='
    7: push ' '
    8: push '0'
    9: push ','
   10: push ' '
   11: push 'i'
   12: push ' '
   13: push '<'
   14: push '='
   15: push ' '
   16: push '9'
   17: push ','
   18: push ' '
   19: push 'i'
   20: push ' '
   21: push ':'
   22: push '='
   23: push ' '
   24: push 'i'
   25: push ' '
   26: push '+'
   27: push ' '
   28: push '1'
   29: push 26
   30: push 0
   31: push 0
   32: put_line
# test/while.p, 7: 	i := 0;
   33: pushvar 0, 4
   34: push 0
   35: llimit 0
   36: ulimit 9
   37: assign 1
# test/while.p, 8: 	while (i < 9) loop
   38: pushvar 0, 4
   39: eval 1
   40: push 9
   41: lt
   42: jneqi 58
# test/while.p, 9: 		put_line(i);
   43: pushvar 0, 4
   44: eval 1
   45: push 1
   46: push 0
   47: push 0
   48: put_line
# test/while.p, 10: 		i := i + 1
   49: pushvar 0, 4
   50: pushvar 0, 4
   51: eval 1
   52: push 1
# test/while.p, 11: 	endloop;
   53: add
   54: llimit 0
   55: ulimit 9
   56: assign 1
   57: jumpi 38
# test/while.p, 12: 	put_line(i);
   58: pushvar 0, 4
   59: eval 1
   60: push 1
   61: push 0
   62: push 0
   63: put_line
# test/while.p, 13: 	put_line();
   64: push 0
   65: push 0
   66: push 0
   67: put_line
# test/while.p, 14: 
# test/while.p, 15: 	putln("natural`min, 9, i := succ(i)");
   68: push 'n'
   69: push 'a'
   70: push 't'
   71: push 'u'
   72: push 'r'
   73: push 'a'
   74: push 'l'
   75: push '`'
   76: push 'm'
   77: push 'i'
   78: push 'n'
   79: push ','
   80: push ' '
   81: push '9'
   82: push ','
   83: push ' '
   84: push 'i'
   85: push ' '
   86: push ':'
   87: push '='
   88: push ' '
   89: push 's'
   90: push 'u'
   91: push 'c'
   92: push 'c'
   93: push '('
   94: push 'i'
   95: push ')'
   96: push 28
   97: push 0
   98: push 0
   99: putln
# test/while.p, 16: 	i := natural`min;
  100: pushvar 0, 4
  101: push 0
  102: llimit 0
  103: ulimit 9
  104: assign 1
# test/while.p, 17: 	while (i < 9) loop
  105: pushvar 0, 4
  106: eval 1
  107: push 9
  108: lt
  109: jneqi 124
# test/while.p, 18: 		putln(i);
  110: pushvar 0, 4
  111: eval 1
  112: push 1
  113: push 0
  114: push 0
  115: putln
# test/while.p, 19: 		i := succ(i)
  116: pushvar 0, 4
  117: pushvar 0, 4
  118: eval 1
# test/while.p, 20: 	endloop;
  118: succ 9
  119: llimit 0
  120: ulimit 9
  121: assign 1
  122: jumpi 104
# test/while.p, 21: 	put_line(i);
  123: pushvar 0, 4
  124: eval 1
  125: push 1
  126: push 0
  127: push 0
  128: put_line
# test/while.p, 22: 	put_line();
  129: push 0
  130: push 0
  131: push 0
  132: put_line
# test/while.p, 23: 
# test/while.p, 24: 	put_line("R_min, R_max, i := succ(i)");
  133: push 'R'
  134: push '_'
  135: push 'm'
  136: push 'i'
  137: push 'n'
  138: push ','
  139: push ' '
  140: push 'R'
  141: push '_'
  142: push 'm'
  143: push 'a'
  144: push 'x'
  145: push ','
  146: push ' '
  147: push 'i'
  148: push ' '
  149: push ':'
  150: push '='
  151: push ' '
  152: push 's'
  153: push 'u'
  154: push 'c'
  162: put_line
# test/while.p, 25: 	i := R_min;
  163: pushvar 0, 4
  164: push 0
  165: llimit 0
  166: ulimit 9
  167: assign 1
# test/while.p, 26: 	while (i < R_max) loop
  168: pushvar 0, 4
  169: eval 1
  170: push 9
  171: lt
  172: jneqi 187
# test/while.p, 27: 		put_line(i);
  173: pushvar 0, 4
  174: eval 1
  175: push 1
  176: push 0
  177: push 0
  178: put_line
# test/while.p, 28: 		i := succ(i)
  180: pushvar 0, 4
  181: pushvar 0, 4
  182: eval 1
# test/while.p, 29: 	endloop;
  182: succ 9
  183: llimit 0
  184: ulimit 9
  185: assign 1
  186: jumpi 168
# test/while.p, 30: 	put_line(i)
  187: pushvar 0, 4
  188: eval 1
  189: push 1
  190: push 0
  191: push 0
  192: push 0
# test/while.p, 31: endprog
  192: put_line
# test/while.p, 32: 
  194: ret 0

i := 0, i <= 9, i := i + 1
0
1
2
3
4
5
6
7
8
9

natural`min, 9, i := succ(i)
0
1
2
3
4
5
6
7
8
9

R`min, R`max, i := succ(i)
0
1
2
3
4
5
6
7
8
9
