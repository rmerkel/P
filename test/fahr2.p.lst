# fahr2.p, 2: { print Fahrenheit-Celsius table	}
# fahr2.p, 3: 
# fahr2.p, 4: const
    0: call 0, 2
    1: halt
# fahr2.p, 5: 	LOWER =   0.0;	{	lower table limit	}
# fahr2.p, 6: 	UPPER = 300.0;	{	upper table limit	}
# fahr2.p, 7: 	STEP  =  20.0;	{	table step size		}
# fahr2.p, 8: 
# fahr2.p, 9: var
# fahr2.p, 10: 	fahr, celsius;
# fahr2.p, 11: 
# fahr2.p, 12: begin
    2: enter 2
# fahr2.p, 13: 	fahr = LOWER;
    3: push 0.000000
    4: pushVar 0, 4
    5: assign
# fahr2.p, 14: 	while fahr <= UPPER do begin
    6: pushVar 0, 4
    7: eval
    8: push 300.000000
    9: lte
   10: jneq 28
# fahr2.p, 15: 		celsius = 5.0 * (fahr-32.0) / 9.0;
   11: push 5.000000
   12: pushVar 0, 4
   13: eval
   14: push 32.000000
   15: sub
   16: mul
   17: push 9.000000
   18: div
   19: pushVar 0, 5
   20: assign
# fahr2.p, 16: 		fahr = fahr + STEP;
   21: pushVar 0, 4
   22: eval
   23: push 20.000000
   24: add
   25: pushVar 0, 4
   26: assign
# fahr2.p, 17: 	end;
   27: jump 6
# fahr2.p, 18:  end.
   28: ret

        8:   0.000000
        9: -17.777778
        8:  20.000000
        9: - 6.666667
        8:  40.000000
        9:   4.444444
        8:  60.000000
        9:  15.555556
        8:  80.000000
        9:  26.666667
        8: 100.000000
        9:  37.777778
        8: 120.000000
        9:  48.888889
        8: 140.000000
        9:  60.000000
        8: 160.000000
        9:  71.111111
        8: 180.000000
        9:  82.222222
        8: 200.000000
        9:  93.333333
        8: 220.000000
        9: 104.444444
        8: 240.000000
        9: 115.555556
        8: 260.000000
        9: 126.666667
        8: 280.000000
        9: 137.777778
        8: 300.000000
        9: 148.888889
        8: 320.000000
