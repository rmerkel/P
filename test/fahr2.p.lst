# test/fahr2.p, 1: { print Fahrenheit-Celsius table	}
# test/fahr2.p, 2: {	first version; integers only	}
# test/fahr2.p, 3: 
# test/fahr2.p, 4: program fact2 ;
# test/fahr2.p, 5: const
    0: call 0, 2
    1: halt
# test/fahr2.p, 6: 	LOWER =   0.0;	{	lower table limit	}
# test/fahr2.p, 7: 	UPPER = 300.0;	{	upper table limit	}
# test/fahr2.p, 8: 	STEP  =  20.0;	{	table step size		}
# test/fahr2.p, 9: 
# test/fahr2.p, 10: var
# test/fahr2.p, 11: 	fahr, celsius : real;
# test/fahr2.p, 12: 
# test/fahr2.p, 13: begin
    2: enter 2
# test/fahr2.p, 14: 	fahr := LOWER;
    3: pushvar 0, 4
    4: push 0.000000
    5: assign 1
# test/fahr2.p, 15: 	while fahr <= UPPER do begin
    6: pushvar 0, 4
    7: eval 1
    8: push 300.000000
    9: lte
   10: jneq 28
# test/fahr2.p, 16: 		celsius := 5.0 * (fahr-32.0) / 9.0;
   11: pushvar 0, 5
   12: push 5.000000
   13: pushvar 0, 4
   14: eval 1
   15: push 32.000000
   16: sub
   17: mul
   18: push 9.000000
   19: div
   20: assign 1
# test/fahr2.p, 17: 		fahr := fahr + STEP;
   21: pushvar 0, 4
   22: pushvar 0, 4
   23: eval 1
   24: push 20.000000
   25: add
   26: assign 1
# test/fahr2.p, 18: 	end;
   27: jump 6
# test/fahr2.p, 19:  end.
   28: ret

        8:   0.000000
        9: -17.777778
        8:  20.000000
        9:  -6.666667
        8:  40.000000
        9:   4.444444
        8:  60.000000
        9:  15.555556
        8:  80.000000
        9:  26.666667
        8: 100.000000
        9:  37.777778
        8: 120.000000
        9:  48.888889
        8: 140.000000
        9:  60.000000
        8: 160.000000
        9:  71.111111
        8: 180.000000
        9:  82.222222
        8: 200.000000
        9:  93.333333
        8: 220.000000
        9: 104.444444
        8: 240.000000
        9: 115.555556
        8: 260.000000
        9: 126.666667
        8: 280.000000
        9: 137.777778
        8: 300.000000
        9: 148.888889
        8: 320.000000
