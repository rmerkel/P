# test/testif.p, 1: program testif() is
# test/testif.p, 2: var x, y, z : integer;
    0: calli 0, 2
    1: halt
# test/testif.p, 3: begin
    2: enter 3
# test/testif.p, 4: 	x := 1;
    3: pushvar 0, 4
    4: push 1
    5: assign 1
# test/testif.p, 5: 	y := 2;
    6: pushvar 0, 5
    7: push 2
    8: assign 1
# test/testif.p, 6: 	z := 3;
    9: pushvar 0, 6
   10: push 3
   11: assign 1
# test/testif.p, 7: 	{ set x to 2	}
# test/testif.p, 8: 	if x = 1 then x := y else x := z endif;
   12: pushvar 0, 4
   13: eval 1
   14: push 1
   15: equ
   16: jneqi 22
   17: pushvar 0, 4
   18: pushvar 0, 5
   19: eval 1
   20: assign 1
   21: jumpi 26
   22: pushvar 0, 4
   23: pushvar 0, 6
   24: eval 1
   25: assign 1
# test/testif.p, 9: 	put_line(x);
   26: pushvar 0, 4
   27: eval 1
   28: push 1
   29: push 0
   30: push 0
   31: put
   32: push '
'
   33: push 1
   34: push 0
   35: push 0
   36: put
# test/testif.p, 10: 
# test/testif.p, 11: 	{ set x to  3	}
# test/testif.p, 12: 	if x = y then x := z else x := y endif;
   37: pushvar 0, 4
   38: eval 1
   39: pushvar 0, 5
   40: eval 1
   41: equ
   42: jneqi 48
   43: pushvar 0, 4
   44: pushvar 0, 6
   45: eval 1
   46: assign 1
   47: jumpi 52
   48: pushvar 0, 4
   49: pushvar 0, 5
   50: eval 1
   51: assign 1
# test/testif.p, 13: 	put_line(x)
   52: pushvar 0, 4
   53: eval 1
   54: push 1
   55: push 0
   56: push 0
   57: put
# test/testif.p, 14: endprog
   58: push '
'
   59: push 1
   60: push 0
   61: push 0
   62: put
# test/testif.p, 15: 
# test/testif.p, 16: 
   63: ret

2
3
