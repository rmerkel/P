# test/testif.p, 1: program testif ;
# test/testif.p, 2: var x, y, z : integer;
    0: push 0
    1: push 4
    2: call
    3: halt
# test/testif.p, 3: begin
    4: enter 3
# test/testif.p, 4: 	x := 1;
    5: pushvar 0, 4
    6: push 1
    7: assign 1
# test/testif.p, 5: 	y := 2;
    8: pushvar 0, 5
    9: push 2
   10: assign 1
# test/testif.p, 6: 	z := 3;
   11: pushvar 0, 6
   12: push 3
   13: assign 1
# test/testif.p, 7: 	{ set x to 2	}
# test/testif.p, 8: 	if x = 1 then x := y else x := z;
   14: pushvar 0, 4
   15: eval 1
   16: push 1
   17: equ
   18: push 26
   19: jneq
   20: pushvar 0, 4
   21: pushvar 0, 5
   22: eval 1
   23: assign 1
   24: push 30
   25: jump
   26: pushvar 0, 4
   27: pushvar 0, 6
   28: eval 1
   29: assign 1
# test/testif.p, 9: 	writeln(x);
   30: pushvar 0, 4
   31: eval 1
   32: push 1
   33: push 0
   34: push 0
   35: push 1
   36: writeln
# test/testif.p, 10: 
# test/testif.p, 11: 	{ set x to  3	}
# test/testif.p, 12: 	if x = y then x := z else x := y;
   37: pushvar 0, 4
   38: eval 1
   39: pushvar 0, 5
   40: eval 1
   41: equ
   42: push 50
   43: jneq
   44: pushvar 0, 4
   45: pushvar 0, 6
   46: eval 1
   47: assign 1
   48: push 54
   49: jump
   50: pushvar 0, 4
   51: pushvar 0, 5
   52: eval 1
   53: assign 1
# test/testif.p, 13: 	writeln(x)
   54: pushvar 0, 4
   55: eval 1
   56: push 1
   57: push 0
   58: push 0
# test/testif.p, 14: end.
   59: push 1
   60: writeln
   61: ret
# test/testif.p, 15: 

2
3
